//
// Generated By:JAX-WS RI IBM 2.2.1-07/09/2014 01:53 PM(foreman)- (JAXB RI IBM 2.2.3-07/07/2014 12:56 PM(foreman)-)
//


package com.fcpy.example.jaxwsboot.client.converter;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

@WebServiceClient(name = "ConverterService", targetNamespace = "http://service.jaxwsboot.example.fcpy.com/", wsdlLocation = "WEB-INF/wsdl/ConverterService.wsdl")
public class ConverterService
    extends Service
{

    private final static URL CONVERTERSERVICE_WSDL_LOCATION;
    private final static WebServiceException CONVERTERSERVICE_EXCEPTION;
    private final static QName CONVERTERSERVICE_QNAME = new QName("http://service.jaxwsboot.example.fcpy.com/", "ConverterService");

    static {
            CONVERTERSERVICE_WSDL_LOCATION = com.fcpy.example.jaxwsboot.client.converter.ConverterService.class.getResource("/WEB-INF/wsdl/ConverterService.wsdl");
        WebServiceException e = null;
        if (CONVERTERSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'WEB-INF/wsdl/ConverterService.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        CONVERTERSERVICE_EXCEPTION = e;
    }

    public ConverterService() {
        super(__getWsdlLocation(), CONVERTERSERVICE_QNAME);
    }

    public ConverterService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CONVERTERSERVICE_QNAME, features);
    }

    public ConverterService(URL wsdlLocation) {
        super(wsdlLocation, CONVERTERSERVICE_QNAME);
    }

    public ConverterService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CONVERTERSERVICE_QNAME, features);
    }

    public ConverterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConverterService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ConverterDelegate
     */
    @WebEndpoint(name = "ConverterPort")
    public ConverterDelegate getConverterPort() {
        return super.getPort(new QName("http://service.jaxwsboot.example.fcpy.com/", "ConverterPort"), ConverterDelegate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConverterDelegate
     */
    @WebEndpoint(name = "ConverterPort")
    public ConverterDelegate getConverterPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.jaxwsboot.example.fcpy.com/", "ConverterPort"), ConverterDelegate.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CONVERTERSERVICE_EXCEPTION!= null) {
            throw CONVERTERSERVICE_EXCEPTION;
        }
        return CONVERTERSERVICE_WSDL_LOCATION;
    }

}
